{
	# Глобальные настройки Caddy
	# E-mail для Let's Encrypt (обязательно для продакшена)
	email {$LETSENCRYPT_EMAIL}
	# По умолчанию: прод Let’s Encrypt. Ничего менять не нужно.
	# acme_ca https://acme-v02.api.letsencrypt.org/directory

	# Можно включить админ‑API (необязательно):
	# admin :2019
}

##########
# САЙТ
# Профили docker-compose гарантируют, что одновременно запущен либо wordpress, либо static-site.
# Мы указываем оба апстрима. Если первый недоступен – Caddy автоматически попробует следующий.
##########

# Используй один из вариантов переменных:
# 1) WORDPRESS_DOMAIN=site.example.com  (как в твоём .env)
# 2) или SITE_DOMAIN=site.example.com   (если используешь мою разметку .env)
# Если заданы обе — поставь одинаковые значения.
{$WORDPRESS_DOMAIN}{$SITE_DOMAIN} {
	encode gzip

	# Общие безопасные заголовки
	header {
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		X-Frame-Options "SAMEORIGIN"
		X-Content-Type-Options "nosniff"
		Referrer-Policy "no-referrer-when-downgrade"
	}

	# Проксирование сайта:
	# 1) wordpress:80 — когда активен профиль "wordpress"
	# 2) static-site:80 — когда активен профиль "static"
	# Если первый upstream недоступен, Caddy попробует следующий.
	reverse_proxy {
		to wordpress:80
		to static-site:80
		# Небольшая «терпимость» к фейлам коннекта, чтобы успеть проверить второй апстрим
		flush_interval -1
	}
}

##########
# n8n
##########
{$N8N_HOSTNAME} {
	encode gzip
	reverse_proxy n8n:5678
}

##########
# Open WebUI
##########
{$WEBUI_HOSTNAME} {
	encode gzip
	reverse_proxy open-webui:8080
}

##########
# Flowise
##########
{$FLOWISE_HOSTNAME} {
	encode gzip
	reverse_proxy flowise:3001
}

##########
# Dify (если используешь)
##########
{$DIFY_HOSTNAME} {
	encode gzip
	# В твоём compose Dify может отсутствовать. Если он есть — подставь правильный сервис/порт.
	# reverse_proxy dify-nginx:8080
	respond "Dify is not configured in docker-compose" 503
}

##########
# Supabase (если используешь)
# Обычно наружу выводят:
# - API (через Kong): 8000
# - Studio: 3000
##########
{$SUPABASE_HOSTNAME} {
	encode gzip
	# Пример: если у тебя сервис API — kong:8000
	# reverse_proxy kong:8000
	respond "Supabase proxy not configured (set your kong/studio service here)" 503
}

##########
# Langfuse (в твоём compose есть langfuse-web:3000)
##########
{$LANGFUSE_HOSTNAME} {
	encode gzip
	reverse_proxy langfuse-web:3000
}

##########
# SearXNG
##########
{$SEARXNG_HOSTNAME} {
	encode gzip
	reverse_proxy searxng:8080
}

##########
# Weaviate
##########
{$WEAVIATE_HOSTNAME} {
	encode gzip
	reverse_proxy weaviate:8080
}

##########
# Neo4j (веб-интерфейс 7474; bolt 7687 — это НЕ HTTP)
##########
{$NEO4J_HOSTNAME} {
	encode gzip
	reverse_proxy neo4j:7474
}

##########
# Grafana
##########
{$GRAFANA_HOSTNAME} {
	encode gzip
	reverse_proxy grafana:3000
}

##########
# Prometheus
##########
{$PROMETHEUS_HOSTNAME} {
	encode gzip
	reverse_proxy prometheus:9090
}

##########
# Portainer
##########
{$PORTAINER_HOSTNAME} {
	encode gzip
	reverse_proxy portainer:9000
}

##########
# Letta (если используешь)
##########
{$LETTA_HOSTNAME} {
	encode gzip
	respond "Letta is not configured in docker-compose" 503
}

##########
# Qdrant
##########
{$QDRANT_HOSTNAME} {
	encode gzip
	reverse_proxy qdrant:6333
}

##########
# ComfyUI
##########
{$COMFYUI_HOSTNAME} {
	encode gzip
	reverse_proxy comfyui:8188
}
