#!/usr/bin/env bash
set -euo pipefail

if [[ ! -f ".env" ]]; then
  echo ".env не найден. Запустите из корня репозитория."
  exit 1
fi

read -r -p "Домен (например, blog.example.com): " WP_DOMAIN
read -r -p "Идентификатор (slug, например, blog): " SLUG

if [[ -z "${WP_DOMAIN}" || -z "${SLUG}" ]]; then
  echo "Нужны домен и slug."
  exit 1
fi

SLUG=$(echo "${SLUG}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]//g')
if [[ -z "${SLUG}" ]]; then
  echo "Неверный slug."
  exit 1
fi

COMPOSE_OVR="docker-compose.wp-${SLUG}.yml"
ENV_FILE=".env.wp-${SLUG}"

WP_DB_PASS=$(openssl rand -base64 24 | tr -d '=+/')
WP_DB_ROOT_PASS=$(openssl rand -base64 24 | tr -d '=+/')

cat > "${ENV_FILE}" <<EOF
WORDPRESS_DB_NAME=wp_${SLUG}
WORDPRESS_DB_USER=wp_${SLUG}
WORDPRESS_DB_PASSWORD=${WP_DB_PASS}
WORDPRESS_DB_ROOT_PASSWORD=${WP_DB_ROOT_PASS}
EOF

cat > "${COMPOSE_OVR}" <<EOF
# generated by add-website-multi.sh
services:
  wpdb_${SLUG}:
    image: mariadb:11
    container_name: wpdb_${SLUG}
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wp_${SLUG}
      MYSQL_USER: wp_${SLUG}
      MYSQL_PASSWORD: \${WORDPRESS_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: \${WORDPRESS_DB_ROOT_PASSWORD}
    volumes:
      - wp_${SLUG}_db:/var/lib/mysql

  wp_${SLUG}:
    image: wordpress:6.6-apache
    container_name: wp_${SLUG}
    restart: unless-stopped
    depends_on:
      - wpdb_${SLUG}
    environment:
      WORDPRESS_DB_HOST: wpdb_${SLUG}:3306
      WORDPRESS_DB_NAME: wp_${SLUG}
      WORDPRESS_DB_USER: wp_${SLUG}
      WORDPRESS_DB_PASSWORD: \${WORDPRESS_DB_PASSWORD}
    volumes:
      - wp_${SLUG}_data:/var/www/html

volumes:
  wp_${SLUG}_data:
  wp_${SLUG}_db:
EOF

# Добавляем в Caddyfile блок для домена
if ! grep -q "${WP_DOMAIN}" Caddyfile; then
  cat >> Caddyfile <<EOF

www.${WP_DOMAIN} {
  redir https://${WP_DOMAIN}{uri}
}

${WP_DOMAIN} {
  encode zstd gzip
  reverse_proxy wp_${SLUG}:80
  header {
    Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    X-Frame-Options "SAMEORIGIN"
    X-Content-Type-Options "nosniff"
    Referrer-Policy "no-referrer-when-downgrade"
  }
}
EOF
fi

# Запускаем с override и отдельным env
echo "Запуск сайта ${WP_DOMAIN} (slug=${SLUG})..."
set -a
# shellcheck disable=SC1090
source "${ENV_FILE}"
set +a
docker compose -f docker-compose.yml -f "${COMPOSE_OVR}" up -d

echo "Готово: https://${WP_DOMAIN}"
echo "DB user: wp_${SLUG}"
echo "DB pass: ${WP_DB_PASS}"
echo "DB root pass: ${WP_DB_ROOT_PASS}"
echo "Override файл: ${COMPOSE_OVR}"
